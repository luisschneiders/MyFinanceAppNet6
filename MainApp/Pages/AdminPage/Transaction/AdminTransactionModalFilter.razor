@using MainApp.Components.Badge
@using MainApp.Components.Modal
@using MainApp.Components.Dropdown.MultiSelect

<Modal @ref="_modal"
       Size="Size.Lg"
       ModalBodyStyle="vh-100"
       IsCloseButtonVisible="false">
    <Title>
        @Label.AppApplyFilter
    </Title>
    <Body>
        <div class="row">
            <div class="col-sm-12 col-lg-6 pb-2">
                <DropdownMultiSelect ButtonSize="Size.Sm"
                            DropdownLabel="@Label.AppFilterByTransactionCategory"
                            DropdownPosition="Position.Start"
                            IconEnd="bi-chevron-down"
                            IconStart="bi-currency-exchange">
                    <!-- Search Input -->
                    <li class="px-2 py-1">
                        <input type="text"
                                class="form-control @("rounded"+_appSettings.Form)"
                                placeholder="@Label.AppFieldSearch"
                                @bind-Value="_searchQueryTransaction"
                                @bind-Value:event="oninput" />
                    </li>
                    <!-- Select All Checkbox -->
                    <li class="px-2 py-1 dropdown-item rounded">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="select-all-transaction" @onchange="ToggleSelectAllTransaction" />
                            <label class="form-check-label w-100" for="select-all-transaction">
                                <strong>
                                    @Label.AppSelectAll
                                </strong>
                            </label>
                        </div>
                    </li>
                    @foreach (var (transactionCategory, index) in _filteredTransactionCategories.Select((value, index) => (value, index)))
                    {
                        <li class="px-2 py-1 dropdown-item rounded">
                            <div class="form-check">
                                <input class="form-check-input" 
                                        type="checkbox"
                                        checked="@transactionCategory.IsChecked"
                                        id="@($"transaction-category{transactionCategory.Id}")"
                                        value="@(transactionCategory.Id)"
                                        @onchange="(e) => OnCheckboxChangedTransaction(e, transactionCategory.Id)" />
                                <label class="form-check-label w-100" for="@($"transaction-category{transactionCategory.Id}")" title="@transactionCategory.Description">
                                    @($"{transactionCategory.Description.Truncate((int)Truncate.TransactionCategory)}")
                                </label>
                            </div>
                        </li>
                    }
                </DropdownMultiSelect>
            </div>
            <div class="col-sm-12 col-lg-6 pb-2">
                <DropdownMultiSelect ButtonSize="Size.Sm"
                                DropdownLabel="@Label.AppFilterByBank"
                                DropdownPosition="Position.Start"
                                IconEnd="bi-chevron-down"
                                IconStart="bi-bank2">
                    <!-- Search Input -->
                    <li class="px-2 py-1">
                        <input type="text"
                                class="form-control @("rounded"+_appSettings.Form)"
                                placeholder="@Label.AppFieldSearch"
                                @bind-Value="_searchQueryInstitution"
                                @bind-Value:event="oninput" />
                    </li>
                    <!-- Select All Checkbox -->
                    <li class="px-2 py-1 dropdown-item rounded">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="select-all-institution" @onchange="ToggleSelectAllInstitution" />
                            <label class="form-check-label w-100" for="select-all-institution">
                                <strong>
                                    @Label.AppSelectAll
                                </strong>
                            </label>
                        </div>
                    </li>
                    @foreach (var (bank, index) in _filteredInstitutions.Select((value, index) => (value, index)))
                    {
                        <li class="px-2 py-1 dropdown-item rounded">
                            <div class="form-check">
                                <input class="form-check-input" 
                                        type="checkbox"
                                        checked="@bank.IsChecked"
                                        id="@($"bank-{bank.Id}")"
                                        value="@(bank.Id)"
                                        @onchange="(e) => OnCheckboxChangedBank(e, bank.Id)" />
                                <label class="form-check-label w-100" for="@($"bank-{bank.Id}")" title="@bank.Description">
                                    @($"{bank.Description.Truncate((int)Truncate.Bank)}")
                                </label>
                            </div>
                        </li>
                    }
                </DropdownMultiSelect>
            </div>
        </div>
    </Body>
    <Footer>
        <div class="row">
            <div class="col-auto">
                <button type="button"
                        class="btn btn-@(Size.Sm.ToString().ToLower()) btn-outline-secondary @("rounded"+_appSettings.Button)"
                        data-dismiss="modal"
                        @onclick="() => CloseModalAsync()">
                    @Label.AppButtonClose
                </button>
            </div>
        </div>
    </Footer>
</Modal>
