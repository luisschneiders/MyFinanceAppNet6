@using MainApp.Components.Card
@using MainApp.Components.Dropdown.Actions
@using MainApp.Components.Dropdown.DateRange
@using MainApp.Components.Spinner
@using MainApp.Components.Accordion

<CardView Styles="border-0">
    <CardMiddle>
        <div class="row justify-content-between pb-2">
            <div class="col-10 col-lg-8 pb-2 d-flex">
                <DropdownDateRange IconColor="Theme.Info"
                                   ButtonSize="Size.Sm"
                                   DateTimeRange="@_dateTimeRange"
                                   DropdownLabel="@_dropdownLabel"
                                   PeriodRange="PeriodRange.Month"
                                   OnSubmitSuccess="data => DropdownDateRangeRefresh(data)" />
            </div>
            <div class="col-2 col-lg-4 d-flex justify-content-end pb-2">
                <div class="d-none d-lg-block">
                    <button class="btn btn-@(Size.Sm.ToString().ToLower()) bg-@(Theme.Light.ToString().ToLower())-subtle text-@(Theme.Info.ToString().ToLower())-emphasis @("rounded"+_appSettings.Button)"
                            @onclick="() => AddRecordAsync()">
                        <i class="bi bi-plus-lg pe-1"></i>New trip
                    </button>
                </div>
                <div class="d-block d-lg-none">
                    <DropdownActions DropdownPosition="Position.End"
                                     ButtonSize="Size.Sm">
                        <li class="px-2 d-block d-lg-none">
                            <button class="dropdown-item text-@(Theme.Info.ToString().ToLower())-emphasis rounded"
                                    @onclick="() => AddRecordAsync()">
                                <i class="bi bi-plus-lg pe-1"></i>New trip
                            </button>
                        </li>
                    </DropdownActions>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="app-page-responsive-height">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th class="col-1 text-nowrap">
                                    Date
                                </th>
                                <th class="col-2 text-nowrap">
                                    Vehicle
                                </th>
                                <th class="col text-nowrap">
                                    Category
                                </th>
                                <th class="col text-end text-nowrap">
                                    Start Odometer
                                </th>
                                <th class="col text-end text-nowrap">
                                    End Odometer
                                </th>
                                <th class="col-1 text-end text-nowrap">
                                    Distance (KM)
                                </th>
                                <th class="col text-nowrap" colspan="2">
                                    Pay Status
                                </th>
                                @* <th></th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @if (_isLoading)
                            {
                                <tr>
                                    <td class="text-center" colspan="10">
                                        <div>
                                            <Spinner Size="Size.Sm" />
                                            <span>
                                                Loading ...
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                @if (_trips.Count <= 0)
                                {
                                    <tr>
                                        <td class="text-center" colspan="10">
                                            <div>
                                                Not record found!
                                            </div>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var record in _trips)
                                    {

                                        <tr>
                                            <td class="text-nowrap">
                                                @record.TDate.ToString("dd/MM/yy")
                                            </td>
                                            <td class="text-nowrap">
                                                @record.VehiclePlate - @record.VehicleDescription
                                            </td>
                                            <td class="text-nowrap">
                                                @_enumHelper.GetDescription(record.TCategoryId)
                                            </td>
                                            <td class="text-end text-nowrap">
                                                @(record.StartOdometer <= 0 ? "--" : record.StartOdometer)
                                            </td>
                                            <td class="text-end text-nowrap">
                                                @(record.EndOdometer <= 0 ? "--" : record.EndOdometer)
                                            </td>
                                            <td class="text-end text-nowrap">
                                                @record.Distance
                                            </td>
                                            <td class="text-nowrap">
                                                <DropdownActions Title="@UpdatePayStatusTitle(record.PayStatus)"
                                                                 ButtonSize="Size.Sm"
                                                                 IconEnd="bi-chevron-down"
                                                                 ButtonColor="@UpdatePayStatusButton(record.PayStatus)"
                                                                 ButtonCssClass="w-100"
                                                                 ButtonInnerStyles="d-flex justify-content-between">
                                                    @foreach (var (status, index) in _payStatuses.Select((value, index) => (value, index)))
                                                    {
                                                        int statusValue = index;

                                                        <li class="px-2">
                                                            <button class="dropdown-item"
                                                                    @onclick="() => UpdatePayStatusAsync(record, statusValue)">
                                                                @($"{status}")
                                                            </button>
                                                        </li>
                                                    }
                                                </DropdownActions>
                                            </td>
                                            <td class="text-center">
                                                <button class="btn btn-link p-0 text-danger"
                                                        type="button"
                                                        title="Archive"
                                                        @onclick="() => ArchiveRecordAsync(record)">
                                                    <i class="bi bi-archive"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                        <tfoot class="bg-@(Theme.Secondary.ToString().ToLower())-subtle fw-semibold">
                            <tr>
                                <td class="text-nowrap" colspan="4">Total distance (KM)</td>
                                <td class="text-nowrap text-end" colspan="2">@_sumByDateRange</td>
                                <td colspan="2"></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </CardMiddle>
</CardView>
<AdminTripOffCanvas @ref="_setupOffCanvas" OnSubmitSuccess="RefreshList" />
<AdminTripModal @ref="_setupModal" OnSubmitSuccess="RefreshList" />
