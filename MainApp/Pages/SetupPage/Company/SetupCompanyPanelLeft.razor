@using MainApp.Components.Card
@using MainApp.Components.Dropdown.Actions
@using MainApp.Components.Loader

<CardView Styles="border-0">
    <CardMiddle>
        <div class="row flex-row-reverse justify-content-between pb-2">
            <div class="col-2 col-lg-3 pb-2 d-flex justify-content-end">
                <div class="d-none d-lg-block">
                    <button class="btn btn-@(Size.Sm.ToString().ToLower()) btn-@(Theme.Dark.ToString().ToLower()) border-@(Theme.Light.ToString().ToLower())-subtle @("rounded"+_appSettings.Button) @("shadow"+_appSettings.Shadow)"
                            @onclick="() => AddRecordAsync()">
                        <i class="bi bi-plus-lg pe-1"></i>@Label.AppSetupCompanyButtonNew
                    </button>
                </div>
                <div class="d-block d-lg-none">
                    <DropdownActions DropdownPosition="Position.End"
                                     ButtonSize="Size.Sm"
                                     ButtonColor="Theme.Dark">
                        <li class="px-2 d-block d-lg-none">
                            <button class="dropdown-item text-@(Theme.Secondary.ToString().ToLower())-emphasis rounded"
                                    @onclick="() => AddRecordAsync()">
                                <i class="bi bi-plus-lg pe-1"></i>@Label.AppSetupCompanyButtonNew
                            </button>
                        </li>
                    </DropdownActions>
                </div>
            </div>
            <div class="col-10 col-lg-9 pb-2">
                <div class="row">
                    <div class="col-8 col-md-8">
                        <input type="text"
                               class="form-control form-control-@(Size.Sm.ToString().ToLower()) @("rounded"+_appSettings.Button) @("shadow"+_appSettings.Shadow)"
                               placeholder="@Label.AppFieldSearch"
                               aria-label="search"
                               @bind-value="_searchTerm"
                               @oninput="SearchTermAsync">

                    </div>
                    <div class="col-2">
                        <button class="btn btn-@(Size.Sm.ToString().ToLower()) btn-outline-@(Theme.Secondary.ToString().ToLower()) border-@(Theme.Light.ToString().ToLower())-subtle @("rounded"+_appSettings.Button) @("shadow"+_appSettings.Shadow)"
                                @onclick="() => SearchAsync()"
                                disabled="@(_searchButtonEnabled ? false : true)">
                            <span class="d-md-none">
                                <i class="bi bi-search"></i>
                            </span>
                            <span class="d-none d-md-block">
                                @Label.AppButtonSearch
                            </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="table-responsive app-page-responsive-height">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th class="col-2">
                                    @Label.AppSetupCompanyFieldDescription
                                </th>
                                <th class="col">
                                    @Label.AppSetupCompanyFieldPosition
                                </th>
                                <th class="col-2 text-end">
                                    @Label.AppSetupCompanyFieldStandardHours
                                </th>
                                <th class="col text-end">
                                    @Label.AppSetupCompanyFieldRate
                                </th>
                                <th class="col-2">
                                    @Label.AppSetupCompanyFieldCompanyType
                                </th>
                                <th class="col">
                                    @Label.AppSetupCompanyFieldStatus
                                </th>
                                <th class="col-1 text-center">@Label.AppButtonViewDetails</th>
                                <th class="col-1 text-center">@Label.AppButtonEdit</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (_isSearching)
                            {
                                foreach (var record in _searchResults)
                                {

                                    <tr class="@(record.IsActive == false ? "text-secondary text-opacity-25" : "" )">
                                        <td>
                                            @record.Description
                                        </td>
                                        <td>
                                            @record.Position
                                        </td>
                                        <td class="text-end">
                                            @(TimeSpan.FromHours(record.StandardHours).ToString("h'h '"))
                                        </td>
                                        <td class="text-end">
                                            @record.Rate.ToString("C")
                                        </td>
                                        <td class="">
                                            @_companyTypes[record.CType - 1] (@record.CType)
                                        </td>
                                        <td>
                                            <div class="form-check form-switch">
                                                @if (record.IsActive)
                                                {
                                                    <input class="form-check-input"
                                                           type="checkbox"
                                                           role="switch"
                                                           id="IsActive-@(record.Id)"
                                                           checked
                                                           @onclick="() => UpdateStatusAsync(record)" />
                                                }
                                                else
                                                {
                                                    <input class="form-check-input"
                                                           type="checkbox"
                                                           role="switch"
                                                           id="IsActive-@(record.Id)"
                                                           @onclick="() => UpdateStatusAsync(record)" />
                                                }
                                            </div>
                                        </td>
                                        <td class="text-center">
                                            <button class="btn btn-sm btn-@(Theme.Light.ToString().ToLower()) @("rounded"+_appSettings.Button) @("shadow"+_appSettings.Shadow)"
                                                    type="button"
                                                    title="@Label.AppButtonViewDetails"
                                                    @onclick="() => ViewRecordAsync(record)">
                                                <i class="bi bi-eye-fill"></i>
                                            </button>
                                        </td>
                                        <td class="text-center">
                                            <button class="btn btn-sm btn-@(Theme.Light.ToString().ToLower()) text-@(Theme.Danger.ToString().ToLower()) @("rounded"+_appSettings.Button) @("shadow"+_appSettings.Shadow)"
                                                    type="button"
                                                    title="@Label.AppButtonEdit"
                                                    @onclick="() => EditRecordAsync(record)">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @if (_isLoading)
                                {
                                    <tr>
                                        <td class="text-center" colspan="6">
                                            <Loader />
                                        </td>
                                    </tr>
                                }
                                else
                                {

                                    @if (_companies.Count <= 0)
                                    {
                                        <tr>
                                            <td class="text-center" colspan="6">
                                                <div>
                                                    @Label.AppNoRecordFound
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        foreach (var record in _companies)
                                        {

                                            <tr class="@(record.IsActive == false ? "text-secondary text-opacity-25" : "" )">
                                                <td>
                                                    @record.Description
                                                </td>
                                                <td>
                                                    @record.Position
                                                </td>
                                                <td class="text-end">
                                                    @(TimeSpan.FromHours(record.StandardHours).ToString("h'h '"))
                                                </td>
                                                <td class="text-end">
                                                    @record.Rate.ToString("C")
                                                </td>
                                                <td class="">
                                                    @_companyTypes[record.CType - 1] (@record.CType)
                                                </td>
                                                <td>
                                                    <div class="form-check form-switch">
                                                        @if (record.IsActive)
                                                        {
                                                            <input class="form-check-input"
                                                                   type="checkbox"
                                                                   role="switch"
                                                                   id="IsActive-@(record.Id)"
                                                                   checked
                                                                   @onclick="() => UpdateStatusAsync(record)" />
                                                        }
                                                        else
                                                        {
                                                            <input class="form-check-input"
                                                                   type="checkbox"
                                                                   role="switch"
                                                                   id="IsActive-@(record.Id)"
                                                                   @onclick="() => UpdateStatusAsync(record)" />
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-center">
                                                    <button class="btn btn-sm btn-@(Theme.Light.ToString().ToLower()) @("rounded"+_appSettings.Button) @("shadow"+_appSettings.Shadow)"
                                                            type="button"
                                                            title="@Label.AppButtonViewDetails"
                                                            @onclick="() => ViewRecordAsync(record)">
                                                        <i class="bi bi-eye-fill"></i>
                                                    </button>
                                                </td>
                                                <td class="text-center">
                                                    <button class="btn btn-sm btn-@(Theme.Light.ToString().ToLower()) text-@(Theme.Danger.ToString().ToLower()) @("rounded"+_appSettings.Button) @("shadow"+_appSettings.Shadow)"
                                                            type="button"
                                                            title="@Label.AppButtonEdit"
                                                            @onclick="() => EditRecordAsync(record)">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </CardMiddle>
</CardView>
@if (_isLoading is false)
{
    <SetupCompanyOffCanvas @ref="_setupOffCanvas" OnSubmitSuccess="RefreshList" DataModel="_companyModel" AppSettings="_appSettings" />
}
