@using MainApp.Components.Badge
@using MainApp.Components.OffCanvas
@using MainApp.Components.Dropdown.Actions

@inject IJSRuntime JS

<OffCanvas @ref="_offCanvas" PositionX="Position.End" Title="Date & Time">
    <fieldset class="py-5">
        <legend><i class="bi bi-calendar2-heart text-info-emphasis fs-5 pe-2"></i>Calendar view</legend>
        <div class="row align-items-center">
            <div class="col-auto pe-0">
                <small class="text-secondary">
                    Your current start of the week is
                </small>
            </div>
            <div class="col-auto">
                <DropdownActions Title="@_localStorageStartOfWeek"
                                 ButtonSize="Size.Sm"
                                 IconEnd="bi-chevron-down"
                                 ButtonCssClass="@("rounded"+_appSettings.Button)"
                                 ButtonInnerStyles="d-flex justify-content-between">
                    @foreach (var (weekDay, index) in _dayNames.Select((value, index) => (value, index)))
                    {
                        <li class="px-2">
                            @*Only enable Sunday and Monday*@
                            <button class="dropdown-item rounded @(index > 1 ? "" : "text-" + Theme.Primary.ToString().ToLower() + "-emphasis")"
                                    disabled="@(index > 1)"
                                    @onclick="() => UpdateWeekDayAsync(weekDay)">
                                @($"{weekDay}")
                            </button>
                        </li>
                    }
                </DropdownActions>
            </div>
        </div>
        @if (_startOfWeekIsInvalid)
        {
            <div class="row">
                <div class="col-12">
                    <ul class="validation-errors">
                        <li class="validation-message">Start of the week field is required.</li>
                    </ul>
                </div>
            </div>
        }
    </fieldset>
    <div class="row">
        <div class="col-6">
            <button class="btn btn-@(Size.Sm.ToString().ToLower()) btn-outline-secondary w-100 @("rounded"+_appSettings.Button)"
                    @onclick="() => CloseOffCanvasAsync()">
                Close
            </button>
        </div>
    </div>
</OffCanvas>
