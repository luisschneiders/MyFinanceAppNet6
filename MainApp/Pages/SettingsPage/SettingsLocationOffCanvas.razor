@using MainApp.Components.Badge
@using MainApp.Components.OffCanvas

<OffCanvas @ref="_offCanvas" PositionX="Position.End" Title="Location">
    <fieldset class="py-5">
        <legend><i class="bi bi-pin-map-fill text-info-emphasis fs-5 pe-2"></i>@Label.AppSettingLocationTitle</legend>
        @if (_currentLocation?.Address is not null)
        {
            <div class="row py-2">
                <div class="col-12">
                    <small class="text-secondary">
                        @Label.AppSettingLocationCurrent
                    </small>
                    <small class="text-info-emphasis">
                        @_currentLocation.Address
                    </small>
                </div>
            </div>
        }
        <div class="py-2">
            <div class="row">
                <div class="col-12">
                    <div class="form-floating pb-2">
                        <input type="text"
                               id="Address"
                               class="form-control @("rounded"+_appSettings.Form) @(_formIsInvalid ? "invalid" : "")"
                               placeholder="@Label.AppSettingLocationAddress"
                               @bind-value="_locationModel.Address" />
                        <label for="Address">@Label.AppSettingLocationAddress</label>
                    </div>
                </div>
            </div>
            @if (_formIsInvalid)
            {
                <div class="row">
                    <div class="col-12">
                        <ul class="validation-errors">
                            <li class="validation-message">@Label.AppSettingLocationMessageFieldRequired</li>
                        </ul>
                    </div>
                </div>
            }
            <div class="row pb-4">
                <div class="col-12 d-flex justify-content-end">
                    <button class="btn btn-@(Size.Sm.ToString().ToLower()) btn-outline-primary @("rounded"+_appSettings.Button)"
                            disabled="@(_isProcessing ? true : false)"
                            @onclick="VerifyAddress">
                        @if (_isVerifying)
                        {
                            <span>
                                @Label.AppSettingLocationVerifyWithGoogle
                            </span>
                        }
                        else
                        {
                            <span>
                                <i class="bi bi-check2-circle pe-1"></i>@Label.AppSettingLocationVerifyAddress
                            </span>
                        }
                    </button>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    @if (_locationlist.Count > 0)
                    {
                        <span class="text-secondary fw-semibold">@Label.AppSettingLocationSelectAddress</span>
                        <ul class="list-group @("rounded"+_appSettings.Form)">
                            @foreach (var (item, index) in _locationlist.Select((value, index) => (value, index)))
                            {
                                <li class="list-group-item bg-light-subtle">
                                    <input class="form-check-input me-1" type="radio" name="listGroupRadio" value="@index" id="@index" @onclick="() => SelectAddress(item)">
                                    <label class="form-check-label stretched-link" for="@index">
                                        <small>
                                            @item.Address
                                        </small>
                                    </label>
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
        @if (_userLocationIsInvalid)
        {
            <div class="row">
                <div class="col-12">
                    <ul class="validation-errors">
                        <li class="validation-message">@Label.AppSettingLocationMessageListRequired</li>
                    </ul>
                </div>
            </div>
        }
    </fieldset>
    <div class="row">
        <div class="col-6">
            <button class="btn btn-@(Size.Sm.ToString().ToLower()) btn-outline-secondary w-100 @("rounded"+_appSettings.Button)"
                    @onclick="() => CloseOffCanvasAsync()">
                @Label.AppButtonClose
            </button>
        </div>
        <div class="col-6">
            <button class="btn btn-@(Size.Sm.ToString().ToLower()) btn-primary w-100 @("rounded"+_appSettings.Button)"
                    disabled="@(_userLocationModel.Location.Latitude == 0 && _userLocationModel.Location.Longitude == 0 ? true : false)"
                    @onclick="SaveAddress">
                @(_isProcessing ? @Label.AppButtonSaving : @Label.AppButtonSave)
            </button>
        </div>
    </div>
    <div class="position-absolute bottom-0">
        <div class="py-2">
            <small class="text-secondary">
                @Label.AppSettingLocationMessageResultsProvidedBy<NavLink class="text-decoration-underline" href="https://mapsplatform.google.com/" target="_blank">@Label.AppSettingLocationGoogleMapsPlatform</NavLink>
            </small>
        </div>
    </div>
</OffCanvas>
