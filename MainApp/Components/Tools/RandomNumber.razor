@using MainApp.Components.Badge
@using MainApp.Components.Card
@using MainApp.Components.Shared

<CardView Styles="w-100 border-0">
    <CardMiddle>
        <SharedHeader 
            Title="Random numbers"
            Icon="bi bi-shuffle"
            IconColor="Theme.Info" />
        <p class="text-center text-wrap py-3">
            Generate random numbers from a giving range set of numbers.
        </p>
        <div class="row">
            <div class="col-sm-12 col-lg-5">
                <div class="row pb-3">
                    <div class="col">
                        <div class="form-floating">
                            <input type="number" 
                                id="StartRange"
                                class="form-control @("rounded"+_appSettings.Button)"
                                min="1"
                                placeholder="Min"
                                @bind-value="_randonNumberMin" />
                            <label for="StartRange">Min</label>
                        </div>
                    </div>
                    <div class="col-auto d-flex align-items-center"> - </div>
                    <div class="col">
                        <div class="form-floating">
                            <input type="number"
                                id="EndRange"
                                class="form-control @("rounded"+_appSettings.Button)"
                                min="1"
                                placeholder="Max"
                                @bind-value="_randonNumberMax" />
                            <label for="EndRange">Max</label>
                        </div>
                    </div>
                </div>
                <div class="row pb-5">
                    <div class="col-12 d-flex justify-content-end">
                        <button class="btn btn-primary w-100 @("rounded"+_appSettings.Button)"
                                type="button"
                                disabled="@(_isProcessing ? true : false)"
                                @onclick="GenerateAsync">
                            @(_isProcessing ? "Generating..." : "Generate")
                        </button>
                    </div>
                </div>

            </div>
            <div class="col-2 d-flex justify-content-center">
                <div class="vr d-none d-lg-flex h-100 mx-lg-0"></div>
            </div>
            <div class="col-sm-12 col-lg-5">
                <div class="row d-flex align-items-center pb-3">
                    <div class="col-12">
                        <p class="pb-3">Results:</p>
                        @foreach (var (item, index) in _randomNumbers.Select((value, index) => (value, index)))
                        {
                            <span class="btn btn-@(Size.Md.ToString().ToLower()) bg-success-subtle text-success-emphasis me-1 mb-2 @("rounded"+_appSettings.Button)">
                                @item
                                <sup class="fw-light">
                                    <Badge BackgroundColor="Theme.Warning" Message="@((index + 1).ToString())" />
                                </sup>
                            </span>
                        }
                        @if(_randomNumbers.Count > 0)
                        {
                            <hr />
                            <div class="d-flex justify-content-end py-2">
                                <button class="btn btn-danger w-50 @("rounded"+_appSettings.Button)"
                                    type="button"
                                    @onclick="ClearAsync">
                                    Clear
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </CardMiddle>
</CardView>
